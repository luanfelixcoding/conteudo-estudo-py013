# Introdu√ß√£o a M√≥dulos em Python

"""

M√≥dulos em Python s√£o arquivos que cont√™m c√≥digo Python (fun√ß√µes, vari√°veis, classes, etc.)
e que podem ser **importados** e reutilizados em outros arquivos.

Eles ajudam a:
- Organizar melhor o c√≥digo
- Reutilizar fun√ß√µes
- Dividir responsabilidades em arquivos separados
"""

# Importando um m√≥dulo padr√£o do Python
import datetime as dt
from math import pi, ceil
import math  # M√≥dulo da biblioteca padr√£o para opera√ß√µes matem√°ticas

raiz = math.sqrt(25)  # sqrt = square root = raiz quadrada
print("Raiz quadrada de 25:", raiz)


# Importando apenas partes de um m√≥dulo
print("Valor de pi:", pi)
print("Ceil de 4.2:", ceil(4.2))  # Arredonda para cima


# Renomeando um m√≥dulo (alias)
data_atual = dt.datetime.now()
print("Data e hora atual:", data_atual)


# Criando e usando seu pr√≥prio m√≥dulo
"""
Imagine que temos um arquivo chamado utilidades.py com este conte√∫do:

# utilidades.py
def saudacao(nome):
    return f"Ol√°, {nome}!"

def dobro(n):
    return n * 2
"""

# Para usar essas fun√ß√µes em outro arquivo:
# import utilidades

# print(utilidades.saudacao("Maria"))
# print(utilidades.dobro(10))

"""
üìÅ Estrutura de pasta:
meu_projeto/
‚îÇ
‚îú‚îÄ‚îÄ main.py          <-- Aqui voc√™ importa e usa
‚îî‚îÄ‚îÄ utilidades.py    <-- Aqui est√£o as fun√ß√µes que voc√™ criou
"""

# Usando m√≥dulos externos (instalados com pip)

"""
Alguns m√≥dulos n√£o v√™m com o Python e precisam ser instalados usando o pip.
Exemplo: requests (faz requisi√ß√µes HTTP)

Terminal:
pip install requests

Uso:
import requests
resposta = requests.get("https://api.github.com")
print(resposta.status_code)
"""

# Verificando os m√≥dulos dispon√≠veis

help("modules")  # Mostra uma lista de todos os m√≥dulos instalados

"""
Resumo:
- M√≥dulo = qualquer arquivo .py que pode ser importado
- Use m√≥dulos para organizar e reutilizar seu c√≥digo
- Voc√™ pode importar m√≥dulos do Python, seus pr√≥prios, ou externos
- Evite c√≥digos gigantes em um √∫nico arquivo ‚Äî divida com m√≥dulos!
"""
